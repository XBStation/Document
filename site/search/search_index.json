{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"introduction/","text":"XBStation is a solution for streaming fpv video and controling UAV via internet (wifi, 3G/4G/5G cellular network). it includes: open hardware on drone (PX4 and ArduPilot) and software on ground XBStation has been designed to provide the drone applications for delivery, surveys, security, ambulance and emergency response Supported Flight Controllers \u00b6 All supported Ardupilot boards including Pixhawk, APMx and Cube Supported Companion Computers \u00b6 Raspberry 2 Raspberry 3B/3B+ Raspberry 4 Odroid-XU4 Supported Cameras \u00b6 CSI camera (ex: Raspberry camera V1, V2, ...) USB camera (ex: Logitech C270, Logitech C920, ...) Supported Ground Control Stations \u00b6 QGroundControl MissionPlanner APM Planner How It Works \u00b6","title":"Introduction"},{"location":"introduction/#supported-flight-controllers","text":"All supported Ardupilot boards including Pixhawk, APMx and Cube","title":"Supported Flight Controllers"},{"location":"introduction/#supported-companion-computers","text":"Raspberry 2 Raspberry 3B/3B+ Raspberry 4 Odroid-XU4","title":"Supported Companion Computers"},{"location":"introduction/#supported-cameras","text":"CSI camera (ex: Raspberry camera V1, V2, ...) USB camera (ex: Logitech C270, Logitech C920, ...)","title":"Supported Cameras"},{"location":"introduction/#supported-ground-control-stations","text":"QGroundControl MissionPlanner APM Planner","title":"Supported Ground Control Stations"},{"location":"introduction/#how-it-works","text":"","title":"How It Works"},{"location":"time-line/","text":"XBStation 2.2 \u00b6 XBFirm 2.3.1: Link here XBStation ThirdParty 2.3.1 Link here XBStation ThirdParty 2.2.1 Link here Update HD Video stream Realtime Tracking Vehicle Informations API Streaming to Media Server (beta) Recording video Simulate SITL XBStation 2.1.1 \u00b6 XBFirm 2.0.3: Link here XBStation ThirdParty 2.1.3 Link here Update HD Video stream Realtime Tracking Vehicle Informations API Streaming to Media Server (beta)","title":"TimeLine"},{"location":"time-line/#xbstation-22","text":"XBFirm 2.3.1: Link here XBStation ThirdParty 2.3.1 Link here XBStation ThirdParty 2.2.1 Link here Update HD Video stream Realtime Tracking Vehicle Informations API Streaming to Media Server (beta) Recording video Simulate SITL","title":"XBStation 2.2"},{"location":"time-line/#xbstation-211","text":"XBFirm 2.0.3: Link here XBStation ThirdParty 2.1.3 Link here Update HD Video stream Realtime Tracking Vehicle Informations API Streaming to Media Server (beta)","title":"XBStation 2.1.1"},{"location":"ardusub/setup-companion-computer/","text":"You can control Raspberry Pi via SSH http://www.hobbytronics.co.uk/raspberry-pi-ssh or HDMI screen Username: pi Password: companion OS supported: Ardusub image Initial Setup \u00b6 Add command: sudo modprobe bcm2835-v4l2 into /etc/rc.local - Open ~/companion/.companion.rc file and comment telem.py, streamer.py, audio.py Install XBFirm \u00b6 Install wget sudo apt-get install wget Download setup file wget https://download.xb-uav.com/ardusub-buster/setup-xb.sh Change the access permissions sudo chmod +x setup-xb.sh Run setup.sh file sudo ./setup-xb.sh The installation time is approx 10 minutes - 15 minutes. Login \u00b6 If you don't have account, Click here to register free 1 month account When the installation is complete, Type \"1\" to choose \"Login\" option Then type \"4\" to reboot your Raspberry Pi, and the software will be auto start. You need to wait about 60s for preparing Checking status \u00b6 After login and reboot, XBFirm will be run automatically. To make sure the software on Companion Computer work, you can check XBFirm status by type this command: sudo xbstation status For more xbstation command line interface, please refer this link: xbstation command lines","title":"Setup companion computer"},{"location":"ardusub/setup-companion-computer/#initial-setup","text":"Add command: sudo modprobe bcm2835-v4l2 into /etc/rc.local - Open ~/companion/.companion.rc file and comment telem.py, streamer.py, audio.py","title":"Initial Setup"},{"location":"ardusub/setup-companion-computer/#install-xbfirm","text":"Install wget sudo apt-get install wget Download setup file wget https://download.xb-uav.com/ardusub-buster/setup-xb.sh Change the access permissions sudo chmod +x setup-xb.sh Run setup.sh file sudo ./setup-xb.sh The installation time is approx 10 minutes - 15 minutes.","title":"Install XBFirm"},{"location":"ardusub/setup-companion-computer/#login","text":"If you don't have account, Click here to register free 1 month account When the installation is complete, Type \"1\" to choose \"Login\" option Then type \"4\" to reboot your Raspberry Pi, and the software will be auto start. You need to wait about 60s for preparing","title":"Login"},{"location":"ardusub/setup-companion-computer/#checking-status","text":"After login and reboot, XBFirm will be run automatically. To make sure the software on Companion Computer work, you can check XBFirm status by type this command: sudo xbstation status For more xbstation command line interface, please refer this link: xbstation command lines","title":"Checking status"},{"location":"features/sitl-simulator/","text":"Running SITL \u00b6 Open Raspberry Pi terminal, navigate to one of the vehicle directories (in this case Copter) and call sim_vehicle.py to start SITL (Software In The Loop) cd ~/ardupilot/ArduCopter Run this command to start the simulator ../Tools/autotest/sim_vehicle.py --no-mavproxy NOTE: If you want to configure the vehicle's location, for example Canada, run this command: ../Tools/autotest/sim_vehicle.py --no-mavproxy -L CA_LOCATION_2 Running XBFirm simulate mode \u00b6 Open another Raspberry Pi terminal Stop current XBFirm process sudo xbstation disable-autostart Note : This command is disable autostart XBFirm, after simulation, you need to run command to enable autostart XBFirm at boot: sudo xbstation enable-autostart Run XBFirm simulate mode sudo xbstation run --delay 1 --simulate raspivid -t 0 -fps 25 -hf -b 2000000 -o - | ffmpeg -i - -vcodec copy -an -r 30 -g 30 -bufsize 2000000 -pix_fmt yuv420p -f mpegts udp://192.168.1.10:5601","title":"Simulator"},{"location":"features/sitl-simulator/#running-sitl","text":"Open Raspberry Pi terminal, navigate to one of the vehicle directories (in this case Copter) and call sim_vehicle.py to start SITL (Software In The Loop) cd ~/ardupilot/ArduCopter Run this command to start the simulator ../Tools/autotest/sim_vehicle.py --no-mavproxy NOTE: If you want to configure the vehicle's location, for example Canada, run this command: ../Tools/autotest/sim_vehicle.py --no-mavproxy -L CA_LOCATION_2","title":"Running SITL"},{"location":"features/sitl-simulator/#running-xbfirm-simulate-mode","text":"Open another Raspberry Pi terminal Stop current XBFirm process sudo xbstation disable-autostart Note : This command is disable autostart XBFirm, after simulation, you need to run command to enable autostart XBFirm at boot: sudo xbstation enable-autostart Run XBFirm simulate mode sudo xbstation run --delay 1 --simulate raspivid -t 0 -fps 25 -hf -b 2000000 -o - | ffmpeg -i - -vcodec copy -an -r 30 -g 30 -bufsize 2000000 -pix_fmt yuv420p -f mpegts udp://192.168.1.10:5601","title":"Running XBFirm simulate mode"},{"location":"features/streaming-directly-from-pi-to-media-server/","text":"Open Raspberry Pi terminal Stop current XBFirm process sudo xbstation disable-autostart Run XBFirm with these input commands sudo xbstation --delay 1 --gst \"YOUR GST COMMAND\" Example: sudo xbstation run --delay 1 --gst \"gst-launch-1.0 v4l2src device=/dev/video0 do-timestamp=1 ! video/x-raw , width=320, height=240,framerate=20/1 ! videoscale ! videoconvert ! x264enc tune=zerolatency bitrate=1000 speed-preset=superfast ! flvmux streamable=true ! rtmpsink location=rtmp://1.2.3.4:1935/app-fe24/e30b1c3c\"","title":"Streaming directly from pi to media server"},{"location":"installation/companion-computer/flashing-sd-card/","text":"XBFirm is a set of softwares base on Linux making an platform for live streaming and control telemetry data. Installing \u00b6 Download XBStation.img For Raspberry Pi 2/3B/3B+/4: Link Mediafire Download SD Formatter 4.0 ( Click here to Download ) Download Win32diskimager ( Click here to Download ) Input micro SD card to PC and format Open Win32DiskImager, chose XBFirmxxx.img file and Write And waiting . write successful Insert SD to Raspberry Pi Connect companion computer to internet (via Ethernet cable or Wifi) Login \u00b6 If you don't have account, Click here to register free 1 month account Move to XBStationManagerHeadless folder and run .sh file cd ~/XBStationManagerHeadless sudo ./XBStationManagerHeadless.sh Type \"1\" to choose \"Login\" option Then type \"4\" to reboot your Raspberry Pi, and the software will be auto start. You need to wait about 60s for preparing You can control Raspberry Pi via SSH http://www.hobbytronics.co.uk/raspberry-pi-ssh or HDMI screen Username: pi Password: raspberry Checking status \u00b6 After login and reboot, XBFirm will be run automatically. To make sure the software on Companion Computer work, you can check XBFirm status by type this command: sudo xbstation status For more xbstation command line interface, please refer this link: xbstation command lines","title":"Option 1: Flashing SD Card (Recommended)"},{"location":"installation/companion-computer/flashing-sd-card/#installing","text":"Download XBStation.img For Raspberry Pi 2/3B/3B+/4: Link Mediafire Download SD Formatter 4.0 ( Click here to Download ) Download Win32diskimager ( Click here to Download ) Input micro SD card to PC and format Open Win32DiskImager, chose XBFirmxxx.img file and Write And waiting . write successful Insert SD to Raspberry Pi Connect companion computer to internet (via Ethernet cable or Wifi)","title":"Installing"},{"location":"installation/companion-computer/flashing-sd-card/#login","text":"If you don't have account, Click here to register free 1 month account Move to XBStationManagerHeadless folder and run .sh file cd ~/XBStationManagerHeadless sudo ./XBStationManagerHeadless.sh Type \"1\" to choose \"Login\" option Then type \"4\" to reboot your Raspberry Pi, and the software will be auto start. You need to wait about 60s for preparing You can control Raspberry Pi via SSH http://www.hobbytronics.co.uk/raspberry-pi-ssh or HDMI screen Username: pi Password: raspberry","title":"Login"},{"location":"installation/companion-computer/flashing-sd-card/#checking-status","text":"After login and reboot, XBFirm will be run automatically. To make sure the software on Companion Computer work, you can check XBFirm status by type this command: sudo xbstation status For more xbstation command line interface, please refer this link: xbstation command lines","title":"Checking status"},{"location":"installation/companion-computer/package-installing/","text":"XBFirm is a set of softwares base on Linux making an platform for live streaming and control telemetry data. You can control Raspberry Pi via SSH http://www.hobbytronics.co.uk/raspberry-pi-ssh or HDMI screen Username: pi Password: raspberry OS supported: Debian Stretch Lite Debian Stretch With Desktop Debian Buster Lite Debian Buster With Desktop Installing \u00b6 Open Raspberry Pi terminal Install wget sudo apt-get install wget Download setup file With Debian Buster Lite or Debian Buster With Desktop wget https://download.xb-uav.com/debian-buster/setup.sh With Debian Stretch Lite or Debian Stretch With Desktop wget https://download.xb-uav.com/debian-stretch/setup.sh Change the access permissions sudo chmod +x setup.sh Run setup.sh file sudo ./setup.sh The installation time is approx 10 minutes - 15 minutes. Login \u00b6 If you don't have account, Click here to register free 1 month account When the installation is complete, Type \"1\" to choose \"Login\" option Then type \"4\" to reboot your Raspberry Pi, and the software will be auto start. You need to wait about 60s for preparing Checking status \u00b6 After login and reboot, XBFirm will be run automatically. To make sure the software on Companion Computer work, you can check XBFirm status by type this command: sudo xbstation status For more xbstation command line interface, please refer this link: xbstation command lines","title":"Option 2: Installing Package"},{"location":"installation/companion-computer/package-installing/#installing","text":"Open Raspberry Pi terminal Install wget sudo apt-get install wget Download setup file With Debian Buster Lite or Debian Buster With Desktop wget https://download.xb-uav.com/debian-buster/setup.sh With Debian Stretch Lite or Debian Stretch With Desktop wget https://download.xb-uav.com/debian-stretch/setup.sh Change the access permissions sudo chmod +x setup.sh Run setup.sh file sudo ./setup.sh The installation time is approx 10 minutes - 15 minutes.","title":"Installing"},{"location":"installation/companion-computer/package-installing/#login","text":"If you don't have account, Click here to register free 1 month account When the installation is complete, Type \"1\" to choose \"Login\" option Then type \"4\" to reboot your Raspberry Pi, and the software will be auto start. You need to wait about 60s for preparing","title":"Login"},{"location":"installation/companion-computer/package-installing/#checking-status","text":"After login and reboot, XBFirm will be run automatically. To make sure the software on Companion Computer work, you can check XBFirm status by type this command: sudo xbstation status For more xbstation command line interface, please refer this link: xbstation command lines","title":"Checking status"},{"location":"installation/ground-stations/download-software/","text":"Ground Stations \u00b6 If you have already Ground Control Station software, skip this step * MissionPlanner: ( Link Download ) * QGroundControl: ( Link Download ) * GStreamer x86_64 ( Link Download ) XBStation Third Party 2.3.1 Application \u00b6 Download: ( Link Mediafire ) Extract and Run: XBStation.exe Login \u00b6 If you don't have account, Click here to register free 1 month account Connect \u00b6 1. Choose connection type: There is 2 connection options: XBServer XBStation provide a built-in server for people who want to quick setup and no need more secure, which doesn't ask for any complicated configuration like VPN. VPN More detail: how to setup your own VPN server Input your Firm IP on Raspberry Pi into field \"Firm IP\" 2. Click 'Connect' button The status field: - Not connect - Ready: connected to server and waiting data from Rasp Pi - No Signal: Not receiving data from Rasp Pi - Connected: Station is connected to Rasp Pi","title":"Download and Login Software"},{"location":"installation/ground-stations/download-software/#ground-stations","text":"If you have already Ground Control Station software, skip this step * MissionPlanner: ( Link Download ) * QGroundControl: ( Link Download ) * GStreamer x86_64 ( Link Download )","title":"Ground Stations"},{"location":"installation/ground-stations/download-software/#xbstation-third-party-231-application","text":"Download: ( Link Mediafire ) Extract and Run: XBStation.exe","title":"XBStation Third Party 2.3.1 Application"},{"location":"installation/ground-stations/download-software/#login","text":"If you don't have account, Click here to register free 1 month account","title":"Login"},{"location":"installation/ground-stations/download-software/#connect","text":"1. Choose connection type: There is 2 connection options: XBServer XBStation provide a built-in server for people who want to quick setup and no need more secure, which doesn't ask for any complicated configuration like VPN. VPN More detail: how to setup your own VPN server Input your Firm IP on Raspberry Pi into field \"Firm IP\" 2. Click 'Connect' button The status field: - Not connect - Ready: connected to server and waiting data from Rasp Pi - No Signal: Not receiving data from Rasp Pi - Connected: Station is connected to Rasp Pi","title":"Connect"},{"location":"installation/ground-stations/missionplanner/","text":"Connect to Telemetry data \u00b6 At the top-right, choose TCP type Host name/ip: 127.0.0.1 (default) Remote port: 5760 (default) Connect to Video Streaming \u00b6 At the Video HUD area, Right Click -> Video -> Set GStreamer source -> input GStreamer URL: udpsrc port=5601 caps = \"application/x-rtp, media=video, clock-rate=90000, encoding-name=H264, payload=96\" ! rtpjitterbuffer ! rtph264depay ! avdec_h264 ! videoconvert ! video/x-raw,format=BGRA ! appsink name=outsink NOTE: The GStreamer URL just need to input at the first time, MissionPlanner will auto save this params, the next run with MissionPlanner, you just Right Click -> Video -> Set GStreamer source -> and click OK to use video streaming NOTE: Download and install the plugin (domestic environment download is slow, if it fails, please restart the MissionPlanner ground station and try again) After the installation is complete, restart the MissionPlanner ground station to display the following interface.","title":"MissionPlanner"},{"location":"installation/ground-stations/missionplanner/#connect-to-telemetry-data","text":"At the top-right, choose TCP type Host name/ip: 127.0.0.1 (default) Remote port: 5760 (default)","title":"Connect to Telemetry data"},{"location":"installation/ground-stations/missionplanner/#connect-to-video-streaming","text":"At the Video HUD area, Right Click -> Video -> Set GStreamer source -> input GStreamer URL: udpsrc port=5601 caps = \"application/x-rtp, media=video, clock-rate=90000, encoding-name=H264, payload=96\" ! rtpjitterbuffer ! rtph264depay ! avdec_h264 ! videoconvert ! video/x-raw,format=BGRA ! appsink name=outsink NOTE: The GStreamer URL just need to input at the first time, MissionPlanner will auto save this params, the next run with MissionPlanner, you just Right Click -> Video -> Set GStreamer source -> and click OK to use video streaming NOTE: Download and install the plugin (domestic environment download is slow, if it fails, please restart the MissionPlanner ground station and try again) After the installation is complete, restart the MissionPlanner ground station to display the following interface.","title":"Connect to Video Streaming"},{"location":"installation/ground-stations/qgroundcontrol/","text":"Connect to Telemetry data \u00b6 Comm Links -> choose TCP type Host name/ip: 127.0.0.1 (default) Remote port: 5760 (default) Connect to Video Streaming \u00b6 General -> Video -> choose video source: UDP Video Stream, UDP port: 5601","title":"QGroundControl"},{"location":"installation/ground-stations/qgroundcontrol/#connect-to-telemetry-data","text":"Comm Links -> choose TCP type Host name/ip: 127.0.0.1 (default) Remote port: 5760 (default)","title":"Connect to Telemetry data"},{"location":"installation/ground-stations/qgroundcontrol/#connect-to-video-streaming","text":"General -> Video -> choose video source: UDP Video Stream, UDP port: 5601","title":"Connect to Video Streaming"},{"location":"installation/ground-stations/setting/","text":"Telemetry Setting \u00b6 a. Port TCP telemetry server port, Ground Control Station can connect to this port via TCP to get telemetry data, default is 5760 Change port number and click \"Restart\" button to change TCP server port b. Connection Telemetry data is relayed through internet in 2 connections method: UDP to archive minimize latency (possible packet loss, suitable for Joystick mode) TCP method to achieve high reliability Camera Setting \u00b6 a. Port Destination video port, Mission Planner and QGroundControl supports video in HUD by default on port 5600 b. Video source Video device, default is /dev/video0 c. Recording Turn on Record video on Raspberry Pi Video save at: XBStationManagerHeadless/videos on Raspberry Pi d. Sharing Relay video streaming to another destination, syntax: xxx.xxx.xxx.xxx:port2;yyy.yyy.yyy.yyy:port3 For example: Share video streaming to ip 10.0.10.4 at port 5602, just type: 10.0.10.4:5602 Share video streaming to ip 10.0.0.4 at port 5602 and 192.168.1.4 at port 5603, type: 10.0.10.4:5602;192.168.1.4:5603 e Video Quality Auto: Video streaming is start with auto quality (300x200 pixels and 90fps with Pi camera v2) Manual: FPS: Frame per second Bitrate: number of bits that can be either sent or received per time unit (kbps), default 0 is auto Resolution Note: For changing camera setting, you need to Turn OFF camera and Turn ON camera again to apply the change Serial Setting \u00b6 a. Port Port allows you to choose serial port on companion computer The companion computer will show all available port (ttyS0, ttyUSB0, ttyUSB1\u2026). You have to choose exactly serial port. If you don\u2019t know name port, you can try them one by one. With Rasp pi: Choose ttyS0 (default) when you connect pi \u2013 pix via Direct Cable or Stable Power Module Choose ttyUSB0 when you connect pi \u2013 pix via USART USB b. Baudrate Baudrate allows you to choose serial baudrate on companion computer The baudrate on companion computer have to same the baudrate (telemetry 2) on Pixhawk With PX4: SER_TEL2_BAUD (Default 921600), you should change 57600 for stable and save data. With ArduPilot: SERIAL2_BAUD (Default 57 , it means 57600), SERIAL2_PROTOCOL : 2 (mavlink 2)","title":"Setting XBStation Thirdparty"},{"location":"installation/ground-stations/setting/#telemetry-setting","text":"a. Port TCP telemetry server port, Ground Control Station can connect to this port via TCP to get telemetry data, default is 5760 Change port number and click \"Restart\" button to change TCP server port b. Connection Telemetry data is relayed through internet in 2 connections method: UDP to archive minimize latency (possible packet loss, suitable for Joystick mode) TCP method to achieve high reliability","title":"Telemetry Setting"},{"location":"installation/ground-stations/setting/#camera-setting","text":"a. Port Destination video port, Mission Planner and QGroundControl supports video in HUD by default on port 5600 b. Video source Video device, default is /dev/video0 c. Recording Turn on Record video on Raspberry Pi Video save at: XBStationManagerHeadless/videos on Raspberry Pi d. Sharing Relay video streaming to another destination, syntax: xxx.xxx.xxx.xxx:port2;yyy.yyy.yyy.yyy:port3 For example: Share video streaming to ip 10.0.10.4 at port 5602, just type: 10.0.10.4:5602 Share video streaming to ip 10.0.0.4 at port 5602 and 192.168.1.4 at port 5603, type: 10.0.10.4:5602;192.168.1.4:5603 e Video Quality Auto: Video streaming is start with auto quality (300x200 pixels and 90fps with Pi camera v2) Manual: FPS: Frame per second Bitrate: number of bits that can be either sent or received per time unit (kbps), default 0 is auto Resolution Note: For changing camera setting, you need to Turn OFF camera and Turn ON camera again to apply the change","title":"Camera Setting"},{"location":"installation/ground-stations/setting/#serial-setting","text":"a. Port Port allows you to choose serial port on companion computer The companion computer will show all available port (ttyS0, ttyUSB0, ttyUSB1\u2026). You have to choose exactly serial port. If you don\u2019t know name port, you can try them one by one. With Rasp pi: Choose ttyS0 (default) when you connect pi \u2013 pix via Direct Cable or Stable Power Module Choose ttyUSB0 when you connect pi \u2013 pix via USART USB b. Baudrate Baudrate allows you to choose serial baudrate on companion computer The baudrate on companion computer have to same the baudrate (telemetry 2) on Pixhawk With PX4: SER_TEL2_BAUD (Default 921600), you should change 57600 for stable and save data. With ArduPilot: SERIAL2_BAUD (Default 57 , it means 57600), SERIAL2_PROTOCOL : 2 (mavlink 2)","title":"Serial Setting"},{"location":"installation/hardware/diy-ubec/","text":"Materials \u00b6 Companion computer: Rasp Pi 3 B/3 B+, Rasp Pi 4 Flight controller: Pixhawk, Cube, Pixhawk 4... Micro SD card: Minium 8 GB, and Class 10 Camera: Pi Cam V1, Pi Cam V2, Logitech camera ( C270, C310, C510, C720, C920 etc...) and others CSI, USB camera. D-Com or Wifi usb devices: E3372 (Tested) or others (autoconnect are recommended) UBEC: HobbyKing\u2122 HKU5 5V/5A UBEC or more, you must minium 5V-3A Direct Cable or USB USART for connecting ( companion computer - flight controller ) With Rasp Pi 3 B/3 B+, Rasp Pi 4 you have many option for build: Connect Rasp Pi to Pixhawk via Direct Cable or USB USART Choose USB camera or CSI camera Connection \u00b6 For connect Pi to Pixhawk, you have 2 method 1. Method Direct Cable: Connect the Pixhawk\u2019s TELEM2 port to the RPi\u2019s Ground, TX and RX pins as shown in the image Do not connect VCC-Pixhawk to 5V-RaspPi 2. Method USB USART( CP2102, PL2303 or others ): Connect the Pixhawk\u2019s TELEM2 port to the USB USART\u2019s Ground, TX and RX pins as shown in the image Do not connect VCC-Pixhawk to 5V-USB USART Configuring Pixhawk Autopilot \u00b6 The baudrate on companion computer must same the baudrate (telemery2) on Pixhawk Turn on Ground Control Station ( Qgroundcontrol or Mission Planner) and set params: With PX4: SER_TEL2_BAUD (Default 921600), you should change 57600 for stable and save data With ArduPilot: SERIAL2_BAUD (Default 57, it means 57600), SERIAL2_PROTOCOL: 2 (MAVLink 2)","title":"Option 2: DIY with UBEC"},{"location":"installation/hardware/diy-ubec/#materials","text":"Companion computer: Rasp Pi 3 B/3 B+, Rasp Pi 4 Flight controller: Pixhawk, Cube, Pixhawk 4... Micro SD card: Minium 8 GB, and Class 10 Camera: Pi Cam V1, Pi Cam V2, Logitech camera ( C270, C310, C510, C720, C920 etc...) and others CSI, USB camera. D-Com or Wifi usb devices: E3372 (Tested) or others (autoconnect are recommended) UBEC: HobbyKing\u2122 HKU5 5V/5A UBEC or more, you must minium 5V-3A Direct Cable or USB USART for connecting ( companion computer - flight controller ) With Rasp Pi 3 B/3 B+, Rasp Pi 4 you have many option for build: Connect Rasp Pi to Pixhawk via Direct Cable or USB USART Choose USB camera or CSI camera","title":"Materials"},{"location":"installation/hardware/diy-ubec/#connection","text":"For connect Pi to Pixhawk, you have 2 method 1. Method Direct Cable: Connect the Pixhawk\u2019s TELEM2 port to the RPi\u2019s Ground, TX and RX pins as shown in the image Do not connect VCC-Pixhawk to 5V-RaspPi 2. Method USB USART( CP2102, PL2303 or others ): Connect the Pixhawk\u2019s TELEM2 port to the USB USART\u2019s Ground, TX and RX pins as shown in the image Do not connect VCC-Pixhawk to 5V-USB USART","title":"Connection"},{"location":"installation/hardware/diy-ubec/#configuring-pixhawk-autopilot","text":"The baudrate on companion computer must same the baudrate (telemery2) on Pixhawk Turn on Ground Control Station ( Qgroundcontrol or Mission Planner) and set params: With PX4: SER_TEL2_BAUD (Default 921600), you should change 57600 for stable and save data With ArduPilot: SERIAL2_BAUD (Default 57, it means 57600), SERIAL2_PROTOCOL: 2 (MAVLink 2)","title":"Configuring Pixhawk Autopilot"},{"location":"installation/hardware/stable-power-module/","text":"Materials \u00b6 Companion computer: Rasp Pi 3 B/3 B+, Rasp Pi 4 Flight controller: Pixhawk, Cube, Pixhawk 4... XBStation Power Module ( https://product.xb-uav.com/products/power-module-for-raspberry-pi-and-telemetry ) Micro SD card: Minium 8 GB, and Class 10 Camera: Pi Cam V1, Pi Cam V2, Logitech camera ( C270, C310, C510, C720, C920 etc...) and others CSI, USB camera. D-Com or Wifi usb devices: E3372 (Tested) or others (autoconnect are recommended) Connection \u00b6 Setup with XBStation Module \u00b6 For easly Setup Hardware, we create XBStation Power Module Configuring Pixhawk Autopilot \u00b6 The baudrate on companion computer must same the baudrate (telemery2) on Pixhawk Turn on Ground Control Station ( Qgroundcontrol or Mission Planner) and set params: - With PX4: SER_TEL2_BAUD (Default 921600), you should change 57600 for stable and save data - With ArduPilot: SERIAL2_BAUD (Default 57, it means 57600), SERIAL2_PROTOCOL: 2 (MAVLink 2)","title":"Option 1: Setup with XBStation Module"},{"location":"installation/hardware/stable-power-module/#materials","text":"Companion computer: Rasp Pi 3 B/3 B+, Rasp Pi 4 Flight controller: Pixhawk, Cube, Pixhawk 4... XBStation Power Module ( https://product.xb-uav.com/products/power-module-for-raspberry-pi-and-telemetry ) Micro SD card: Minium 8 GB, and Class 10 Camera: Pi Cam V1, Pi Cam V2, Logitech camera ( C270, C310, C510, C720, C920 etc...) and others CSI, USB camera. D-Com or Wifi usb devices: E3372 (Tested) or others (autoconnect are recommended)","title":"Materials"},{"location":"installation/hardware/stable-power-module/#connection","text":"","title":"Connection"},{"location":"installation/hardware/stable-power-module/#setup-with-xbstation-module","text":"For easly Setup Hardware, we create XBStation Power Module","title":"Setup with XBStation Module"},{"location":"installation/hardware/stable-power-module/#configuring-pixhawk-autopilot","text":"The baudrate on companion computer must same the baudrate (telemery2) on Pixhawk Turn on Ground Control Station ( Qgroundcontrol or Mission Planner) and set params: - With PX4: SER_TEL2_BAUD (Default 921600), you should change 57600 for stable and save data - With ArduPilot: SERIAL2_BAUD (Default 57, it means 57600), SERIAL2_PROTOCOL: 2 (MAVLink 2)","title":"Configuring Pixhawk Autopilot"},{"location":"sky-data-link/features/info-and-status/","text":"This feature show the UTMOSPhere status and informations in Raspberry Pi Click Get UTMOSPhere Info button on UTMOSPhere tab -> Status tab List of informations will be show: Posting status (Success: Green Led) Telemetry tracking URL Drone Name Drone Serial Interval Time Drone Id Username Response time","title":"Info and Status"},{"location":"sky-data-link/features/log-file/","text":"Location \u00b6 Log files are locate in: /var/log/xbstation/ How to read log file \u00b6 Option 1: XBStationThirdParty Application Go to tab: Log Click Browse button Choose the file you need to see, click Open button Option 2: SkyDataLink application in Raspberry Pi Go to tab Log Choose the file you need to see","title":"Log file"},{"location":"sky-data-link/features/log-file/#location","text":"Log files are locate in: /var/log/xbstation/","title":"Location"},{"location":"sky-data-link/features/log-file/#how-to-read-log-file","text":"Option 1: XBStationThirdParty Application Go to tab: Log Click Browse button Choose the file you need to see, click Open button Option 2: SkyDataLink application in Raspberry Pi Go to tab Log Choose the file you need to see","title":"How to read log file"},{"location":"testing/","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"testing/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"testing/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"testing/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}